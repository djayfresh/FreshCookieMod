package Djf.fresh.cookies;

/*
 * Basic importing
 */
import Djf.fresh.dough.CC_Dough;
import Djf.fresh.dough.CookieDough;
import Djf.fresh.materials.Raisin;
import Djf.minecraft.item.Cookie;
import Djf.minecraft.item.SelfSetItem;
import net.minecraft.block.Block;
import net.minecraft.block.material.Material;
import net.minecraft.item.EnumToolMaterial;
import net.minecraft.item.Item;
import net.minecraft.item.ItemFood;
import net.minecraft.item.ItemSeeds;
import net.minecraft.item.ItemStack;
import net.minecraftforge.common.EnumHelper;
import cpw.mods.fml.common.Mod;
import cpw.mods.fml.common.Mod.Init;
import cpw.mods.fml.common.event.FMLInitializationEvent;
import cpw.mods.fml.common.network.NetworkMod;
import cpw.mods.fml.common.registry.GameRegistry;
import cpw.mods.fml.common.registry.LanguageRegistry;

/*
 * Basic needed forge stuff
 */
@Mod(modid = "FreshCAA", name = "Fresh Cookies", version = "v0.5")
@NetworkMod(clientSideRequired = true, serverSideRequired = false)
public class CookieMod
{
	/*
	 * ToolMaterial
	 */
	//Telling forge that we are creating these
	//items
	public static Cookie cc_Cookie; //My item type that defines its own name and tab
	public static Cookie wm_Cookie;
	public static Cookie pb_Cookie;
	public static Cookie wn_Cookie;
	public static Cookie or_Cookie;
	public static SelfSetItem raisin;
	public static SelfSetItem oats;
	public static SelfSetItem cookie_Dough;
	public static SelfSetItem cc_Dough;
	public static SelfSetItem or_Dough;
	public static Item amethyst;
	public static Item refinedAmethyst;

	//Blocks
	public static Block amethystBlock;
	public static Block amethystOre;

	//tools

	//Declaring Init
	@Init
	public void load(FMLInitializationEvent event)
	{
		// define items
		cc_Cookie = new Cookie_CC(2014); //Cookie is are item type 
		wm_Cookie = new Cookie_WM(2015); //Cookie is are item type 
		wn_Cookie = new Cookie_WN(2016); //Cookie is are item type 
		or_Cookie = new Cookie_OR(2017); //Cookie is are item type 
		pb_Cookie = new Cookie_PB(2018);//.setUnlocalizedName("Peanut Butter Cookie"); //Cookie is are item type
		raisin = new Raisin(2023);
		cookie_Dough = new CookieDough(2024);
		cc_Dough = new CC_Dough(2025);
		or_Dough = new OR_Dough(2026);

		amethyst = new AmythistItem(2019).setUnlocalizedName("Amethyst"); //Cookie is are item type 
		refinedAmethyst = new AmythistItem(2022)
				.setUnlocalizedName("Refined_Amethyst"); //Cookie is are item type 
		// define blocks

		amethystBlock = new AmethystBlock(2020, "Amethystblock")
				.setUnlocalizedName("Amethyst_Block").setHardness(10.0F)
				.setStepSound(Block.soundMetalFootstep).setResistance(10.0F);
		GameRegistry.registerBlock(amethystBlock, "Amethyst Block");
		amethystOre = new AmethystOre(2021, "Amethystore")
				.setUnlocalizedName("Amethyst_Ore").setHardness(3.0F)
				.setStepSound(Block.soundMetalFootstep).setResistance(10.0F);
		GameRegistry.registerBlock(amethystOre, "Amethyst Ore");

		//adding names
		//items
		//Using the items name to add for the registry
		LanguageRegistry.addName(pb_Cookie, pb_Cookie.getItemName()); //Cookie is are item type 
		LanguageRegistry.addName(cc_Cookie, cc_Cookie.getItemName()); //My item type has a way to retrieve just the name
		LanguageRegistry.addName(wm_Cookie, wm_Cookie.getItemName()); //Cookie is are item type 
		LanguageRegistry.addName(wn_Cookie, wn_Cookie.getItemName()); //Cookie is are item type 
		LanguageRegistry.addName(or_Cookie, or_Cookie.getItemName()); //Cookie is are item type 
		LanguageRegistry.addName(raisin, raisin.getItemName());
		LanguageRegistry.addName(oats, oats.getItemName());
		LanguageRegistry.addName(cookie_Dough, cookie_Dough.getItemName());
		LanguageRegistry.addName(cc_Dough, cc_Dough.getItemName());
		LanguageRegistry.addName(or_Dough, or_Dough.getItemName());
		
		LanguageRegistry.addName(amethyst, "Amethyst"); //Cookie is are item type 
		LanguageRegistry.addName(refinedAmethyst, "Refined Amethyst"); //Cookie is are item type 

		//blocks
		LanguageRegistry.addName(amethystBlock, "Amethyst Block"); //Cookie is are item type 

		LanguageRegistry.addName(amethystOre, "Amethyst Ore"); //Cookie is are item type 

		//crafting
		//Amethyst to Block
		GameRegistry.addRecipe(new ItemStack(amethystBlock, 1), new Object[] {
				"TTT", "TTT", "TTT", 'T', amethyst, }); //T(1)T(2)T(3) top-down -left-right
		//AmethystBlock to Amethyst
		GameRegistry.addRecipe(new ItemStack(amethyst, 9), new Object[] {
				"   ", " T ", "   ", 'T', amethystBlock, }); //T(1)T(2)T(3) top-down -left-right

		//First what you want to return (9), and then the item that will create it in any slot 
		GameRegistry.addShapelessRecipe(new ItemStack(amethyst, 9),
				new Object[] { amethystBlock }); //Can append more items such as Item.diamond required to get
		
		GameRegistry.addShapelessRecipe(new ItemStack(cookie_Dough, 4), new Object[] { Item.egg, Item.sugar, Item.wheat});
		GameRegistry.addShapelessRecipe(new ItemStack(cc_Dough, 4), new Object[] { cookie_Dough, new ItemStack(Item.dyePowder, 4, 3)});
		GameRegistry.addShapelessRecipe(new ItemStack(or_Dough, 4), new Object[] { cookie_Dough, raisin, oats});
		
		GameRegistry.addSmelting(cc_Dough.itemID, new ItemStack(cc_Cookie, 8), 4F);
		
		//Smelting
		GameRegistry.addSmelting(CookieMod.amethyst.itemID, new ItemStack(
				refinedAmethyst, 1), 5F);

		//World Generation
		GameRegistry.registerWorldGenerator(new WorldGeneratorDjf());

	}
}